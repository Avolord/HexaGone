@model HexaGone.Models.Map
@{
    Layout = "_GameLayout";
}
<img id="tilesheet" src="~/images/tilesheet2.png" hidden/>
<canvas id="hexmap"></canvas>

@section Scripts{
    <script>
        // variable that represents the canvas
        var canvas;

        // variable for the canvas context
        var ctx;

        // radius of the inner circle of a hexagon (edge-to-edge)
        var hexInnerRadius;

        // radius of the outer circle of a hexagon (corner-to-corner)
        var hexOuterRadius;

        // height of a hexagon (edge-to-edge)
        var hexRectangleHeight;

        // width of a hexagon (corner-to-corner)
        var hexRectangleWidth;

        // sidelength of a hexagon
        var sideLength;

        // amount of columns on the board
        var mapWidth;

        // amount of rows on the board
        var mapHeight;

        // the relative positions of neighboring hexagons to a hexagon in offset-coordinates
        var offsetDirections;

        // two-dimensional array that contains the information about the map
        var mapData;

        // variable representing the tilesheet
        var tilesheetImage;

        // offset position of the starting point of the map after the map is dragged across the screen
        var offsetX;
        var offsetY;

        // current scale of the map after the map is zoomed in or zoomed out
        var scaleX;
        var scaleY;

        // offset-coordinate of the currently marked tile
        var markedTileX;
        var markedTileY;


        function gameVariables() {

            // setting the image variable to the tilesheet
            tilesheetImage = document.getElementById("tilesheet");

            // default value for the offset position of the starting point of the map
            offsetX = 0;
            offsetY = 0;

            // default value for the scale of the map
            scaleX = 1;
            scaleY = 1;

            // default value for the currently marked tile
            markedTileX = -1;
            markedTileY = -1;

            // setting the canvas variable to the current canvas
            canvas = document.getElementById('hexmap');

            // resizing the canvas
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;

            // setting the canvas context
            ctx = canvas.getContext('2d');

            //the length of each side of the hexagon
            sideLength = @Model.HexSideLength;

            //the amount of columns
            mapWidth = @Model.Width;

            //the amount of rows
            mapHeight = @Model.Height;

            //The offset positions of the neighboring hexagons
            offsetDirections = [
                [[+1, 0], [+1, -1], [0, -1],
                [-1, -1], [-1, 0], [0, +1]],
                [[+1, +1], [+1, 0], [0, -1],
                [-1, 0], [-1, +1], [0, +1]],
            ];

            //The inner radius of the hexagon (edge-to-edge)
            hexInnerRadius = Math.sqrt(3) / 2.0 * sideLength;

            //The outer radius of the hexagon (corner-to-corner)
            hexOuterRadius = sideLength;

            //The width of the hexagon (corner-to-corner)
            hexRectangleWidth = sideLength * 2;

            //The height of the hexagon (edge-to-edge)
            hexRectangleHeight = hexInnerRadius * 2;

            // setting up the two-dimensional array containing the information about the map
            mapData = [];
            for (var i = 0; i < mapWidth; i++) {
                mapData[i] = [];
            }
            @for(int i = 0; i < Model.Width; i++)
            {
                for(int j = 0; j < Model.Height; j++)
                {
                    <text>mapData[@i][@j] = @Model.Fields[i][j].FieldTerrain.TerrainID;</text>
                }
            }
        }

        [
            [1, 1, 1, 1,],
            [1, 1, 1, 1]
        ]
    </script>
}